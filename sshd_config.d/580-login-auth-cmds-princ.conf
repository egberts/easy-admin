
# AuthorizedPrincipalsCommandUser specifies the user
# under whose account the AuthorizedPrincipalsCommand
# is run.  It is recommended to use a dedicated user
# that has no other role on the host than running
# authorized principals commands.  If
# AuthorizedPrincipalsCommand is specified but
# AuthorizedPrincipalsCommandUser is not, then sshd(8)
# will refuse to start.
#
# CLI option: -o
# options.authorized_principals_command_user[]/main()
# AuthorizedPrincipalsCommandUser username

# AuthorizedPrincipalsCommand specifies a program to
# be used to generate the list of allowed certificate
# principals as per AuthorizedPrincipalsFile.  The
# program must be owned by root, not writable by group
# or others and specified by an absolute path.
# Arguments to AuthorizedPrincipalsCommand accept the
# tokens described in the TOKENS section.  If no
# arguments are specified then the username of the
# target user is used.
#
# The program should produce on standard output zero
# or more lines of AuthorizedPrincipalsFile output.
# If either AuthorizedPrincipalsCommand or
# AuthorizedPrincipalsFile is specified, then
# certificates offered by the client for
# authentication must contain a principal that is
# listed.
# By default, no AuthorizedPrincipalsCommand is run.
# Valid values are 'none', '', and a valid command.
#
# AuthorizedPrincipalsCommand accepts the tokens %%,
# %F, %f, %h, %i, %K, %k, %s, %T, %t, %U, and %u.
#
# CLI option: -o
# options.authorized_principals_command[]/main()
# AuthorizedKeysCommandUser defaults to 'none'.
AuthorizedPrincipalsCommand none

