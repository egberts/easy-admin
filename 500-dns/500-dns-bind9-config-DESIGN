# TODO: Need to introduce more auto-determination based on current settings and
# setups.
#
# Line of User Questioning that failed:
#   How many interfaces (no, too specific)
#   Is this a workstation or a server? (resolver or authoritative/recursion)
#   Want caching or not?
#   Want forwarding or not?
#   Do you want resolver? (workstation)
#   Do you want recursion? (server)
#   What do you gonna do with your life?
#
#
# Auto-determination
#   NETDEV_LIST="eth0 eth1 eth2 br0 vmbr1 lo"
#   NETDEV_COUNT=5
#   PUBLICLAN_INTFS_A=("eth0")
#   PUBLICLAN_COUNT=1
#   PUBLICLAN_IP4=12.12.12.12
#   PRIVATELAN_NETDEV_LIST="eth1 eth2 br0 vmbr1 wifi0"  # minus lo and eth0
#   PHYSICAL_NETDEV_LIST="eth0 eth1 eth2 wifi0"  # 802.3/802.11
#   ROUTABLE_NETDEV_LIST="eth0 eth2 br0 "  # eth1/wifi0 is slave to br0
#                                          # vmbr1 is a closed-net
#
# 3-part questioning (recursive/authoritative/resolver)
#
#   recursive DNS server (server, private-facing-only)
#     which netdev to provide DNS records (loopback (lo) already selected)?
#     check that selected netdev is public-facing
#     if NETDEV_IS_PUBLIC_FACING then
#       echo "ERROR: MUST NOT do recursion on public-facing netdevs"; exit
#     else
#       needs more speedup of your DNS query responses? (workstation, server)
#         Risk: caching of bad query will take a while for this error to go away
#         You offering a DNS resolver on your local host (workstation, server)
#       Need to use forwarder(s)?
#       if multiple-netdev then
#         On your gateway, is that firewall blocking the forwarding of this DNS 
#         port 53/udp/tcp? (Say no, if YDK)
#         If forwarding of DNS port 53/udp/tcp open?
#           - Router with default-deny firewall AND
#           - Router with split-horizon/bastion DNS nameservers running
#           - CAN_DO_DNS_PASSTHROUGH_FORWARDING=0
#           - MUST_HAVE_FORWARDING=1
#           - MUST_HAVE_FORWARDERS=1
#           - MAY_DO_FORWARDING=x
#           - MAY_DO_FORWARDERS=x
#         else if there is no firewall blocking of DNS querying at the gateway, do you want this DNS server to forward DNS queries to selected upstream nameservers (of your choice)
#           - CAN_DO_DNS_PASSTHROUGH_FORWARDING=1
#           - MUST_HAVE_FORWARDING=0
#           - MUST_HAVE_FORWARDERS=0
#           - MAY_DO_FORWARDING=1
#           - MAY_DO_FORWARDERS=1
#           read "Do you want forwarding of DNS queries to a specific DNS server(s)?
#           if WANT_FORWARDING=1
#             forwarders 9.9.9.9;
#
#         Risk: if xxxx_FORWARDING='y', then upstream (ISP, Google, 
#             CloudFlare) DNS nameservers may be server-tracking you.  
#             Would be just fine if you OWN and OPERATE that upstream 
#             nameserver.
#         This forwarder is for this host? (or for a specific zones)
#           # determination of forwarders/forwarding 
#           if HOST_DEFAULT_DENY_FIREWALL == 'no'  &&
#              GATEWAY_DEFAULT_DENY_FIREWALL == 'no' then
#             prompt for external DNS nameservers (default listings 8.8.8.8;1.1.1.1?)
#           else
#             use gateway as its only nameserver
#           fi
#     fi
#
#   authoritative DNS server (server, public-facing/private-facing):
#     You hosting a domain name of yours? (Y/N) (server)
#     How many domain name do you own and want to served out to somewhere?
#     Check this domain name's TLD (gTLD or not)?
#     if domain name's TLD is publically resolvable (or gTLD-owned)?
#       Domain XXXX needs to be served to public?
#       Domain XXXX needs to be served to private?
#       BOTH_SIDES_SERVED=PUBLIC & PRIVATE
#     else
#       Domain XXXX DOES needs to be served to private (don't ask)
#     fi
#     IF For this domain, on this host, is this DNS server going to be 
#         the primary/master nameserver?
#       MUST_NO_RECURSION='$domain_name'
#       MUST_NO_ALLOW_RECURSION=1
#       ZONE_TYPE='primary'
#     ELSEIF for this domain, on this host, is this DNS server going 
#         to be the secondary/slave nameserver?
#       MUST_NO_RECURSION='$domain_name'
#       MUST_NO_ALLOW_RECURSION=1
#       ZONE_TYPE='secondary'
#     else
#       HAVE_RECURSION='$domain_name'
#       MAY_HAVE_ALLOW_RECURSION=1
#       echo "What exactly am I doing here?; aborted"
#       exit

#
#   WARNING: we do not touch resolver (/etc/resolv.conf) here.
#     to add/replace with this new nameserver,
#       edit 'nameserver 127.0.0.130' on /etc/resolv.conf
#       if /etc/resolv.conf is a symlink then
#         echo consult manual for systemd-resolverd/resolvconf if
#         echo /etc/resolv.conf is managed (symlinked)
#




if SPLIT_HORIZON_BASTION == 'yes' then
  # check for two on-line IP interfaces
  # check for upstream gateway
  # check for firewall blockages

  create_sysv_default
  create_systemd_bind9_service
  create_rndc_key_confs
  create_rndc_commands
  create_named_conf_controls_rndc
  create_tsig_keys_intra_bastion
  create_named_conf_acl
  create_named_conf_trusted_keys
  create_named_conf_logging
  create_named_conf_masters
  create_named_conf_servers
  create_named_conf_options
  create_named_conf_zone_interior
  create_named_conf
fi

write public_named_config
* create_sysv_default
* create_systemd_bind9_service
x create_rndc_key_confs
* create_rndc_commands
* create_named_conf_controls_rndc
  create_tsig_keys_intra_bastion
  create_named_conf_acl
  create_named_conf_trusted_keys
* create_named_conf_logging
* create_named_conf_masters
  create_named_conf_servers
  create_named_conf_options
  create_named_conf_zone_public
  create_named_conf
fi


