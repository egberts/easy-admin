#
# File: 05-memory_usage_network_stack.conf
# Path: /etc/sysctl.d
# Title: Memory usage by network stack in the operating system
# Creator: 79-sysctl-net-performance.sh
# Date: Thu Feb 17 05:11:41 PM EST 2022
# Description:
# Reference:
#  - KVM Network Performance - Best Practices and Tuning Recommendations
#      https://www.ibm.com/downloads/cas/ZVJGQX8E
#
net.core.wmem_max = 12582912
net.core.rmem_max = 12582912

# Setting maximum option memory (TBR)
net.core.optmem_max = 524287

# Increase TCP read/write buffers toenable scaling to a
# larger window size.  Larger window's increase the
# amount of data to be transferred before an
# acknowledgement (ACK) is required.  This reduces
# overall latencies and results in increased throughput.
#
# This setting is typically set to a very conservative
# value of 262,144 bytes.  It is recommended this
# value be set a slarge as the kernel allows.  The
# value used in here was 4,136,960 bytes.  However,
# 4.x+ kernels accept values over 16MB.
net.ipv4.tcp_wmem = 10240 87380 12582912

#  TCP window size for single connections:
#
#   The receive buffer (RX_WINDOW) size must be at least as large as the
#   Bandwidth-Delay Product of the communication link between the sender and
#   receiver. Due to the variations of RTT, you may want to increase the buffer
#   size up to 2 times the Bandwidth-Delay Product. Reference page 289 of
#   "TCP/IP Illustrated, Volume 1, The Protocols" by W. Richard Stevens.
#
#   At 10Gb speeds, use the following formula::
#
#       RX_WINDOW >= 1.25MBytes * RTT(in milliseconds)
#       Example for RTT with 100us: RX_WINDOW = (1,250,000 * 0.1) = 125,000
#
#   RX_WINDOW sizes of 256KB - 512KB should be sufficient.
#
#   Setting the min, max, and default receive buffer (RX_WINDOW) size::
net.ipv4.tcp_rmem = 10240 87380 12582912

net.ipv4.tcp_mem = 10240 87380 12582912

