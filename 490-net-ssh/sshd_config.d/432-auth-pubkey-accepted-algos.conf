#
# File: 432-auth-pubkey-accepted-algos.conf
# Path: /etc/ssh/sshd_config.d
# Title: Offer Types of Public Key algorithms to Clients That Server will Accept
# Description:
#
#   'PubkeyAcceptedAlgorithms' specifies the algorithm
#   types that will be accepted for public key
#   authentication as a list of comma-separated patterns.
#   Alternately if the specified value begins with
#   a ‘+’ character, then the specified algorithm types
#   will be appended to the default set instead of
#   replacing them.
#
#   If the specified value begins with a ‘-’ character,
#   then the specified algorithm types (including wildcards)
#   will be removed from the default set instead of
#   replacing them.
#
#   The list of available algorithm types may also be obtained
#   using "ssh -Q key-sig".
#
#   'PubkeyAcceptedAlgorithms' defaults to:
#       ssh-ed25519
#       ssh-ed25519-cert-v01@openssh.com
#       sk-ssh-ed25519@openssh.com
#       sk-ssh-ed25519-cert-v01@openssh.com
#       ecdsa-sha2-nistp256
#       ecdsa-sha2-nistp256-cert-v01@openssh.com
#       ecdsa-sha2-nistp384
#       ecdsa-sha2-nistp384-cert-v01@openssh.com
#       ecdsa-sha2-nistp521
#       ecdsa-sha2-nistp521-cert-v01@openssh.com
#       sk-ecdsa-sha2-nistp256@openssh.com
#       sk-ecdsa-sha2-nistp256-cert-v01@openssh.com
#       webauthn-sk-ecdsa-sha2-nistp256@openssh.com
#       ssh-dss
#       ssh-dss-cert-v01@openssh.com
#       ssh-rsa
#       ssh-rsa-cert-v01@openssh.com
#       rsa-sha2-256
#       rsa-sha2-256-cert-v01@openssh.com
#       rsa-sha2-512
#       rsa-sha2-512-cert-v01@openssh.com
#
#   Author: Restrict ourselves to ED25519
#   NOTE:  PubkeyAcceptedAlgorithms is the new keyword
#
#   NOTE:  An older 'PubkeyAcceptedKeyTypes' keyword obsoleted by OpenSSH_8.8p1+
#
#
# Authenticate Method: pubkey
# CLI option: -o PubkeyAcceptedAlgorithms=
# Introduced: 8.8
# Obsoleted:
# Process context: server daemon
# Network Stage: Key exchange (KEX) negotiation
# Dispatch: n/a
# Control type: n/a
# Channel type: auth (pre-channel)
# Mode: n/a
# Monitor type: key-allowed
# Variable: options.pubkey_accepted_algos
# Variable: ssh->authctxt->method[].userauth
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/input_userauth_pk_ok()/dispatch[]/ssh_dispatch_run()
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/userauth_pubkey()/method[].userauth()/userauth()/input_userauth_pk_ok()/dispatch[]/ssh_dispatch_run()
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/userauth_pubkey()/method[].userauth()/userauth()/input_userauth_failure()/dispatch[]/ssh_dispatch_run()
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/userauth_pubkey()/method[].userauth()/userauth()/input_gssapi_response()/dispatch[]/ssh_dispatch_run()
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/userauth_pubkey()/method[].userauth()/userauth()/input_gssapi_token()/dispatch[]/ssh_dispatch_run()
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/userauth_pubkey()/method[].userauth()/input_userauth_request()/input_service_request()/dispatch[]/ssh_dispatch_run()
# Source (read): key_sig_algorithm()/send_pubkey_test()/userauth_pubkey()/ssh->authctxt->method[].userauth()/userauth()/*
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/userauth_pubkey()/ssh->authctxt->method[].userauth()/userauth()/*
#
# OpenSSH v9.2 default
#PubkeyAcceptedAlgorithms ssh-ed25519, ssh-ed25519-cert-v01@openssh.com, sk-ssh-ed25519@openssh.com, sk-ssh-ed25519-cert-v01@openssh.com, ecdsa-sha2-nistp256, ecdsa-sha2-nistp256-cert-v01@openssh.com, ecdsa-sha2-nistp384, ecdsa-sha2-nistp384-cert-v01@openssh.com, ecdsa-sha2-nistp521, ecdsa-sha2-nistp521-cert-v01@openssh.com, sk-ecdsa-sha2-nistp256@openssh.com, sk-ecdsa-sha2-nistp256-cert-v01@openssh.com, webauthn-sk-ecdsa-sha2-nistp256@openssh.com, ssh-dss, ssh-dss-cert-v01@openssh.com, ssh-rsa, ssh-rsa-cert-v01@openssh.com, rsa-sha2-256, rsa-sha2-256-cert-v01@openssh.com, rsa-sha2-512, rsa-sha2-512-cert-v01@openssh.com
#
#  Most restrictive
# PubkeyAcceptedAlgorithms ssh-ed25519

# Me
PubkeyAcceptedAlgorithms ssh-ed25519, ssh-ed25519-cert-v01@openssh.com, sk-ssh-ed25519@openssh.com, sk-ssh-ed25519-cert-v01@openssh.com

