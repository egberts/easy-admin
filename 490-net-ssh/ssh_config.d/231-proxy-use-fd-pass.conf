#
# File: 231-proxy-use-fd-pass.conf
# Path: /etc/ssh/ssh_config.d
# Title:
# Description:
#
#   ProxyUseFdPass specifies that ProxyCommand will
#   pass a connected file descriptor back to ssh(1)
#   instead of continuing to execute and pass data.
#
#   The default is 'no'.
#
#   Which can be used with:
#
#       ProxyCommand /path/to/passfd %h %p
#       ProxyUseFdpass yes
#
#   In its current form, it does not do much.
#   It creates a socket the same way the OpenSSH
#   client would have and pass it to the OpenSSH
#   client.
#
#   However, it can extended in order to do things such as:
#
#   * use a custom way to resolve the server address;
#   * bind the socket to a network device;
#   * set some socket options (SO_DONTROUTE, etc.);
#   * open up firewalling rules before connecting to the server;
#   * connect to the server over UNIX socket, SCTP, etc.;
#   * connect to the server over HTTP proxy, SOCKS
#        proxy, TCPMUX, etc.;
#   * choose different connection strategies
#        depending on the current network environment;
#
# NOTE: ProxyUseFdPass is not usable with SSH jump server.
#
# References:
#   * https://www.gabriel.urdhr.fr/2016/08/07/openssh-proxyusefdpass/
#
# This setting is explicitly set in here at system-wide level
# to ensure that it cannot be overridden by any user's 
# own (but attempted replacement) of its value setting, 
# either through user's CLI '-o XXXX' or through 
# user's '$HOME/.ssh/config'.
#
# CLI option: -oProxyUseFdPass=no
# CLI option: -oProxyUseFdPass=false
# CLI option: -oProxyUseFdPass=yes
# CLI option: -oProxyUseFdPass=true
# CLI option: -oProxyUseFdPass=<string>
# Process context: client
# Network stage: Connection establishment
# Message state: n/a
# Variable: options.proxy_use_fdpass
# Source (read): ssh_proxy_fdpass_connect()/ssh_connect()/main()/ssh.c
# Source (write): process_config_line_depth()/process_config_line()/main()
#
ProxyUseFdPass no 
