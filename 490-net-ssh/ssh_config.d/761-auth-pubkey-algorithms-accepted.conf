#
# File: 761-auth-pubkey-algorithms-accepted.conf
# Path: /etc/ssh/ssh_config.d
# Title: Accepted list of public key algorithms
# Description:
#
#   'PubkeyAcceptedAlgorithms' specifies the key types
#   that will be used for public key authentication
#   as a comma-separated list of patterns.
#
#   Alternately if the specified value begins with
#   a ‘+’ character, then the key types after it will
#   be appended to the default instead of replacing
#   it.
#
#   If the specified value begins with a ‘-’
#   character, then the specified key types
#   (including wildcards) will be removed from the
#   default set instead of replacing them.
#
#   The default for this option (for OpenSSH_8.8p1) is:
#
#        ssh-ed25519
#        ssh-ed25519-cert-v01@openssh.com
#        ssh-rsa
#        ecdsa-sha2-nistp256
#        ecdsa-sha2-nistp384
#        ecdsa-sha2-nistp521
#        ssh-rsa-cert-v01@openssh.com
#        ecdsa-sha2-nistp256-cert-v01@openssh.com
#        ecdsa-sha2-nistp384-cert-v01@openssh.com
#        ecdsa-sha2-nistp521-cert-v01@openssh.com
#        ssh-dss (not a default)
#        ssh-dss-cert-v01@openssh.com (not a default)
#        rsa-sha2-512-cert-v01@openssh.com (unlisted)
#        rsa-sha2-256-cert-v01@openssh.com (unlisted)
#        rsa-sha2-512 (unlisted)
#        rsa-sha2-256 (unlisted)
#
#   The list of available key types may also be
#   obtained executing:
#
#       $ ssh -Q key
#
#   The list of available key certificate types may also be
#   obtained executing:
#
#       $ ssh -Q key-cert
#
# NOTE: noticed that this keyword got renamed from 8.4 to 8.8?
#
# CLI option: -oPubkeyAcceptedTypes=<string>
# Process context: client
# Network stage: User authentication
# Message state: SSH2_MSG_USERAUTH_REQUEST
# Message state: SSH2_MSG_USERAUTH_PK_OK
# Variable: options.pubkey_accepted_algos
# Source (read): key_sig_algorithm()/send_pubkey_test()/userauth_pubkey()/authmethods[]/userauth()/input_userauth_pk_ok()/ssh_dispatch_run[]/client_process_buffered_input_packets()/client_loop()/ssh_session2()/main()
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/input_userauth_pk_ok()/ssh_dispatch_run[]/client_process_buffered_input_packets()/client_loop()/ssh_session2()/main()
# Source (read): key_sig_algorithm()/sign_and_send_pubkey()/userauth_pubkey()/input_userauth_pk_ok()/ssh_dispatch_run[]/client_process_buffered_input_packets()/client_loop()/ssh_session2()/main()
# Source (write): key_type_allowed_by_config()/pubkey_prepare()/ssh_userauth2()/ssh_login()/main()
#
#
#  OpenSSH_v8.4p1
# PubkeyAcceptedKeyTypes ssh-ed25519,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256
#

#  OpenSSH_v8.8p1 default
# PubkeyAcceptedAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,sk-ecdsa-sha2-nistp256-cert-v01@openssh.com

# Strictly ED25519 (no ECDSA nor SHA2)
PubkeyAcceptedAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com

